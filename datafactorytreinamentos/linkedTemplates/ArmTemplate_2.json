{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Nome do Data Factory",
			"defaultValue": "datafactorytreinamentos"
		},
		"trigger1_gatilhoarmazenamento_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/cc7abdda-4465-4d4e-8bd9-d502256c66df/resourceGroups/GP_Treinamentos/providers/Microsoft.Storage/storageAccounts/storegetreinamentos"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/Join_Juncaodearquivos')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Aqui iremos fazer um Join para trazer dados de outro dataset. ",
				"activities": [
					{
						"name": "JoinJuncao",
						"description": "Aqui iremos fazer um Join para trazer dados de outro dataset. ",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "JoinJuncao",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ArquivoVendasMod": {},
									"ArquivoVendas": {},
									"ArquivoFinalJoin": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-10-28T02:16:58Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Totaldevendas')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Vamos gerar um arquivo de vendas por ano com os valores totais. ",
				"activities": [
					{
						"name": "Totaldevendas",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "GerandoArquivoVendasPorANo",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"Origemdodataset": {},
									"Gerandoarquivofinal": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-10-27T15:34:58Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Uniao_de_Arquivos')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "União de dois arquivos com a quantidade de colunas idênticas. ",
				"activities": [
					{
						"name": "Arquivo01",
						"description": "Primeiro arquivo para união",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "Uniao_de_arquivos",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"Arquivo01": {},
									"Arquivo02": {},
									"Arquivofinaldeuniao": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "Arquivo02",
						"description": "Segundo arquivo para unificar",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Arquivo01",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "Uniao_de_arquivos",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"Arquivo01": {},
									"Arquivo02": {},
									"Arquivofinaldeuniao": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-10-28T00:45:18Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Val_vendas')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Fluxo_Transformacaodados_vendas",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Ano_venda",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Ano_venda",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "M�s_venda",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "M�s_venda",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Dia_venda",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Dia_venda",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "dtc_venda",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "dtc_venda",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "qtd_venda",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "qtd_venda",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "val_venda",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "val_venda",
											"type": "String",
											"physicalType": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Val_Vendas",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "val_vendas2",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "TransformaDados",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Fluxo_Transformacaodados_vendas",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "Transformacao-de-dados",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"Vendas": {},
									"Clientes": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-10-27T14:58:10Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/VendaMaxPorAnoEMes')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Criando um fluxo para geração de um arquivo de vendas com máximo por ano, mês e rank.",
				"activities": [
					{
						"name": "VendaMaxPorAnoEMes",
						"description": "Vamos criar um fluxo para separar um dataframe por venda total no ano, mes e classificar o maior valor para o menor. ",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "ArquivoVendaAnoMax",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"DatasetVendas": {},
									"ArquivoVendaAnoMax": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-10-27T16:11:40Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Pipelineatualizandooutraspipelines')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Pipeline que atualiza outras pipelines e, podemos juntar também fluxo de dados.",
				"activities": [
					{
						"name": "Executar a Pipeline Total de vendas",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Totaldevendas",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Totaldevendas",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Executar a Pipeline Total de vendas",
								"dependencyConditions": [
									"Skipped"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Totaldevendas",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Transformacao-de-dados",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Totaldevendas",
								"dependencyConditions": [
									"Skipped"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "Transformacao-de-dados",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"Vendas": {},
									"Clientes": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-10-30T15:31:54Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/Totaldevendas')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/trigger1_gatilho')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Gatilho para disparar uma pipeline, podemos agendar por minutos, ou podemos parametrizar para ser disparada após outra execução. ",
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "Carga_tabelaProduto",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Minute",
						"interval": 15,
						"startTime": "2023-10-31T23:03:00Z",
						"endTime": "2023-11-01T23:03:00Z",
						"timeZone": "UTC"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/trigger1_gatilhoarmazenamento')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Disparar o gatilho para armazenar as informações do dataset no banco de dados. Esse gatilho dispara quando tiver os parâmetros abaixo. Por exemplo: se incluírem um arquivo no contêiner com o nome CargasVendas com o terminal CSV.  ",
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "Carga_Dataset_vendas",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/fontes/blobs/CargasVendas",
					"blobPathEndsWith": "csv",
					"ignoreEmptyBlobs": true,
					"scope": "[parameters('trigger1_gatilhoarmazenamento_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated"
					]
				}
			},
			"dependsOn": []
		}
	]
}